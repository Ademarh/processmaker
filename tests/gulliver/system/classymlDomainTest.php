<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.ymlDomain.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:57.
  */ 

  class classymlDomainTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers ymlDomain::ymlDomain
    * @todo   Implement testymlDomain().
    */
    public function testymlDomain() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'ymlDomain', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::addDomain
    * @todo   Implement testaddDomain().
    */
    public function testaddDomain() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'addDomain', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::addDomainValue
    * @todo   Implement testaddDomainValue().
    */
    public function testaddDomainValue() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'addDomainValue', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::exists
    * @todo   Implement testexists().
    */
    public function testexists() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'exists', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::get
    * @todo   Implement testget().
    */
    public function testget() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'get', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::name2keys
    * @todo   Implement testname2keys().
    */
    public function testname2keys() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'name2keys', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::load
    * @todo   Implement testload().
    */
    public function testload() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'load', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::find
    * @todo   Implement testfind().
    */
    public function testfind() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'find', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::getNode
    * @todo   Implement testgetNode().
    */
    public function testgetNode() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'getNode', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::plainArray
    * @todo   Implement testplainArray().
    */
    public function testplainArray() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'plainArray', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ymlDomain::arrayAppend
    * @todo   Implement testarrayAppend().
    */
    public function testarrayAppend() 
    { 
        if (class_exists('ymlDomain')) {
             $methods = get_class_methods( 'ymlDomain');
            $this->assertTrue( in_array( 'arrayAppend', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
