<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.testTools.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:58.
  */ 

  class classtestToolsTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers testTools::importDB
    * @todo   Implement testimportDB().
    */
    public function testimportDB() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'importDB', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::importLocalDB
    * @todo   Implement testimportLocalDB().
    */
    public function testimportLocalDB() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'importLocalDB', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::callMethod
    * @todo   Implement testcallMethod().
    */
    public function testcallMethod() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'callMethod', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::arrayAppend
    * @todo   Implement testarrayAppend().
    */
    public function testarrayAppend() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'arrayAppend', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::arrayDelete
    * @todo   Implement testarrayDelete().
    */
    public function testarrayDelete() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'arrayDelete', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::replaceVariables
    * @todo   Implement testreplaceVariables().
    */
    public function testreplaceVariables() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'replaceVariables', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::findValue
    * @todo   Implement testfindValue().
    */
    public function testfindValue() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'findValue', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers testTools::domain
    * @todo   Implement testdomain().
    */
    public function testdomain() 
    { 
        if (class_exists('testTools')) {
             $methods = get_class_methods( 'testTools');
            $this->assertTrue( in_array( 'domain', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
