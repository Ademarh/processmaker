<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.dbconnection.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:56.
  */ 

  class classDBConnectionTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers DBConnection::DBConnection
    * @todo   Implement testDBConnection().
    */
    public function testDBConnection() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'DBConnection', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::Reset
    * @todo   Implement testReset().
    */
    public function testReset() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'Reset', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::Free
    * @todo   Implement testFree().
    */
    public function testFree() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'Free', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::Close
    * @todo   Implement testClose().
    */
    public function testClose() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'Close', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::logError
    * @todo   Implement testlogError().
    */
    public function testlogError() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'logError', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::traceError
    * @todo   Implement testtraceError().
    */
    public function testtraceError() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'traceError', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::printArgs
    * @todo   Implement testprintArgs().
    */
    public function testprintArgs() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'printArgs', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers DBConnection::GetLastID
    * @todo   Implement testGetLastID().
    */
    public function testGetLastID() 
    { 
        if (class_exists('DBConnection')) {
             $methods = get_class_methods( 'DBConnection');
            $this->assertTrue( in_array( 'GetLastID', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
