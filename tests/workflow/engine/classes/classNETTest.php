<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.net.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classNETTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers NET::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::resolv
    * @todo   Implement testresolv().
    */
    public function testresolv() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'resolv', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::scannPort
    * @todo   Implement testscannPort().
    */
    public function testscannPort() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'scannPort', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::is_ipaddress
    * @todo   Implement testis_ipaddress().
    */
    public function testis_ipaddress() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'is_ipaddress', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::ping
    * @todo   Implement testping().
    */
    public function testping() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'ping', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::loginDbServer
    * @todo   Implement testloginDbServer().
    */
    public function testloginDbServer() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'loginDbServer', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::setDataBase
    * @todo   Implement testsetDataBase().
    */
    public function testsetDataBase() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'setDataBase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::tryConnectServer
    * @todo   Implement testtryConnectServer().
    */
    public function testtryConnectServer() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'tryConnectServer', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::tryOpenDataBase
    * @todo   Implement testtryOpenDataBase().
    */
    public function testtryOpenDataBase() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'tryOpenDataBase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::getDbServerVersion
    * @todo   Implement testgetDbServerVersion().
    */
    public function testgetDbServerVersion() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'getDbServerVersion', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::dbName
    * @todo   Implement testdbName().
    */
    public function testdbName() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'dbName', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::showMsg
    * @todo   Implement testshowMsg().
    */
    public function testshowMsg() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'showMsg', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::getErrno
    * @todo   Implement testgetErrno().
    */
    public function testgetErrno() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'getErrno', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers NET::getErrmsg
    * @todo   Implement testgetErrmsg().
    */
    public function testgetErrmsg() 
    { 
        if (class_exists('NET')) {
             $methods = get_class_methods( 'NET');
            $this->assertTrue( in_array( 'getErrmsg', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
