<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.derivation.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:12.
  */ 

  class classDerivationTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers Derivation::prepareInformation
    * @todo   Implement testprepareInformation().
    */
    public function testprepareInformation() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'prepareInformation', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getRouteCondition
    * @todo   Implement testgetRouteCondition().
    */
    public function testgetRouteCondition() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getRouteCondition', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::GetAppParentIndex
    * @todo   Implement testGetAppParentIndex().
    */
    public function testGetAppParentIndex() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'GetAppParentIndex', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getAllUsersFromAnyTask
    * @todo   Implement testgetAllUsersFromAnyTask().
    */
    public function testgetAllUsersFromAnyTask() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getAllUsersFromAnyTask', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getUsersFullNameFromArray
    * @todo   Implement testgetUsersFullNameFromArray().
    */
    public function testgetUsersFullNameFromArray() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getUsersFullNameFromArray', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getNextAssignedUser
    * @todo   Implement testgetNextAssignedUser().
    */
    public function testgetNextAssignedUser() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getNextAssignedUser', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getDenpendentUser
    * @todo   Implement testgetDenpendentUser().
    */
    public function testgetDenpendentUser() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getDenpendentUser', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::setTasLastAssigned
    * @todo   Implement testsetTasLastAssigned().
    */
    public function testsetTasLastAssigned() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'setTasLastAssigned', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::derivate
    * @todo   Implement testderivate().
    */
    public function testderivate() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'derivate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::doDerivation
    * @todo   Implement testdoDerivation().
    */
    public function testdoDerivation() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'doDerivation', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::verifyIsCaseChild
    * @todo   Implement testverifyIsCaseChild().
    */
    public function testverifyIsCaseChild() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'verifyIsCaseChild', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getDerivatedCases
    * @todo   Implement testgetDerivatedCases().
    */
    public function testgetDerivatedCases() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getDerivatedCases', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Derivation::getGrpUser
    * @todo   Implement testgetGrpUser().
    */
    public function testgetGrpUser() 
    { 
        if (class_exists('Derivation')) {
             $methods = get_class_methods( 'Derivation');
            $this->assertTrue( in_array( 'getGrpUser', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
