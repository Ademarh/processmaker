<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.wsBase.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:17.
  */ 

  class classwsBaseTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers wsBase::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::login
    * @todo   Implement testlogin().
    */
    public function testlogin() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'login', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::processList
    * @todo   Implement testprocessList().
    */
    public function testprocessList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'processList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::roleList
    * @todo   Implement testroleList().
    */
    public function testroleList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'roleList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::groupList
    * @todo   Implement testgroupList().
    */
    public function testgroupList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'groupList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::departmentList
    * @todo   Implement testdepartmentList().
    */
    public function testdepartmentList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'departmentList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::caseList
    * @todo   Implement testcaseList().
    */
    public function testcaseList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'caseList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::unassignedCaseList
    * @todo   Implement testunassignedCaseList().
    */
    public function testunassignedCaseList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'unassignedCaseList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::userList
    * @todo   Implement testuserList().
    */
    public function testuserList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'userList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::triggerList
    * @todo   Implement testtriggerList().
    */
    public function testtriggerList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'triggerList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::inputDocumentList
    * @todo   Implement testinputDocumentList().
    */
    public function testinputDocumentList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'inputDocumentList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::inputDocumentProcessList
    * @todo   Implement testinputDocumentProcessList().
    */
    public function testinputDocumentProcessList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'inputDocumentProcessList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::outputDocumentList
    * @todo   Implement testoutputDocumentList().
    */
    public function testoutputDocumentList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'outputDocumentList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::removeDocument
    * @todo   Implement testremoveDocument().
    */
    public function testremoveDocument() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'removeDocument', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::taskList
    * @todo   Implement testtaskList().
    */
    public function testtaskList() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'taskList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::sendMessage
    * @todo   Implement testsendMessage().
    */
    public function testsendMessage() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'sendMessage', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::getCaseInfo
    * @todo   Implement testgetCaseInfo().
    */
    public function testgetCaseInfo() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'getCaseInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::createUser
    * @todo   Implement testcreateUser().
    */
    public function testcreateUser() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'createUser', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::createGroup
    * @todo   Implement testcreateGroup().
    */
    public function testcreateGroup() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'createGroup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::createDepartment
    * @todo   Implement testcreateDepartment().
    */
    public function testcreateDepartment() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'createDepartment', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::removeUserFromGroup
    * @todo   Implement testremoveUserFromGroup().
    */
    public function testremoveUserFromGroup() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'removeUserFromGroup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::assignUserToGroup
    * @todo   Implement testassignUserToGroup().
    */
    public function testassignUserToGroup() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'assignUserToGroup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::assignUserToDepartment
    * @todo   Implement testassignUserToDepartment().
    */
    public function testassignUserToDepartment() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'assignUserToDepartment', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::sendVariables
    * @todo   Implement testsendVariables().
    */
    public function testsendVariables() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'sendVariables', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::getVariables
    * @todo   Implement testgetVariables().
    */
    public function testgetVariables() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'getVariables', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::newCase
    * @todo   Implement testnewCase().
    */
    public function testnewCase() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'newCase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::newCaseImpersonate
    * @todo   Implement testnewCaseImpersonate().
    */
    public function testnewCaseImpersonate() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'newCaseImpersonate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::derivateCase
    * @todo   Implement testderivateCase().
    */
    public function testderivateCase() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'derivateCase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::executeTrigger
    * @todo   Implement testexecuteTrigger().
    */
    public function testexecuteTrigger() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'executeTrigger', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::taskCase
    * @todo   Implement testtaskCase().
    */
    public function testtaskCase() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'taskCase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::processListVerified
    * @todo   Implement testprocessListVerified().
    */
    public function testprocessListVerified() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'processListVerified', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::reassignCase
    * @todo   Implement testreassignCase().
    */
    public function testreassignCase() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'reassignCase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::systemInformation
    * @todo   Implement testsystemInformation().
    */
    public function testsystemInformation() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'systemInformation', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::importProcessFromLibrary
    * @todo   Implement testimportProcessFromLibrary().
    */
    public function testimportProcessFromLibrary() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'importProcessFromLibrary', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers wsBase::getCaseNotes
    * @todo   Implement testgetCaseNotes().
    */
    public function testgetCaseNotes() 
    { 
        if (class_exists('wsBase')) {
             $methods = get_class_methods( 'wsBase');
            $this->assertTrue( in_array( 'getCaseNotes', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
