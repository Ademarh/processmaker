<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.cli.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classCLITest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers CLI::taskName
    * @todo   Implement testtaskName().
    */
    public function testtaskName() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'taskName', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::taskDescription
    * @todo   Implement testtaskDescription().
    */
    public function testtaskDescription() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'taskDescription', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::taskArg
    * @todo   Implement testtaskArg().
    */
    public function testtaskArg() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'taskArg', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::taskOpt
    * @todo   Implement testtaskOpt().
    */
    public function testtaskOpt() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'taskOpt', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::taskRun
    * @todo   Implement testtaskRun().
    */
    public function testtaskRun() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'taskRun', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::help
    * @todo   Implement testhelp().
    */
    public function testhelp() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'help', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::run
    * @todo   Implement testrun().
    */
    public function testrun() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'run', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::info
    * @todo   Implement testinfo().
    */
    public function testinfo() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'info', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::warning
    * @todo   Implement testwarning().
    */
    public function testwarning() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'warning', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::error
    * @todo   Implement testerror().
    */
    public function testerror() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'error', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::prompt
    * @todo   Implement testprompt().
    */
    public function testprompt() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'prompt', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::question
    * @todo   Implement testquestion().
    */
    public function testquestion() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'question', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers CLI::logging
    * @todo   Implement testlogging().
    */
    public function testlogging() 
    { 
        if (class_exists('CLI')) {
             $methods = get_class_methods( 'CLI');
            $this->assertTrue( in_array( 'logging', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
