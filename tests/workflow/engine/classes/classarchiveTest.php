<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.archive.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:17.
  */ 

  class classarchiveTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers archive::archive
    * @todo   Implement testarchive().
    */
    public function testarchive() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'archive', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::set_options
    * @todo   Implement testset_options().
    */
    public function testset_options() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'set_options', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::create_archive
    * @todo   Implement testcreate_archive().
    */
    public function testcreate_archive() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'create_archive', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::add_data
    * @todo   Implement testadd_data().
    */
    public function testadd_data() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'add_data', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::make_list
    * @todo   Implement testmake_list().
    */
    public function testmake_list() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'make_list', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::add_files
    * @todo   Implement testadd_files().
    */
    public function testadd_files() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'add_files', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::exclude_files
    * @todo   Implement testexclude_files().
    */
    public function testexclude_files() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'exclude_files', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::store_files
    * @todo   Implement teststore_files().
    */
    public function teststore_files() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'store_files', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::list_files
    * @todo   Implement testlist_files().
    */
    public function testlist_files() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'list_files', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::parse_dir
    * @todo   Implement testparse_dir().
    */
    public function testparse_dir() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'parse_dir', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::sort_files
    * @todo   Implement testsort_files().
    */
    public function testsort_files() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'sort_files', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers archive::download_file
    * @todo   Implement testdownload_file().
    */
    public function testdownload_file() 
    { 
        if (class_exists('archive')) {
             $methods = get_class_methods( 'archive');
            $this->assertTrue( in_array( 'download_file', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
