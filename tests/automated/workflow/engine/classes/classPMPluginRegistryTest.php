<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.pluginRegistry.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classPMPluginRegistryTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers PMPluginRegistry::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getSingleton
    * @todo   Implement testgetSingleton().
    */
    public function testgetSingleton() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getSingleton', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::serializeInstance
    * @todo   Implement testserializeInstance().
    */
    public function testserializeInstance() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'serializeInstance', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::unSerializeInstance
    * @todo   Implement testunSerializeInstance().
    */
    public function testunSerializeInstance() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'unSerializeInstance', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::save
    * @todo   Implement testsave().
    */
    public function testsave() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'save', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerPlugin
    * @todo   Implement testregisterPlugin().
    */
    public function testregisterPlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getPluginDetails
    * @todo   Implement testgetPluginDetails().
    */
    public function testgetPluginDetails() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getPluginDetails', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::enablePlugin
    * @todo   Implement testenablePlugin().
    */
    public function testenablePlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'enablePlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::disablePlugin
    * @todo   Implement testdisablePlugin().
    */
    public function testdisablePlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'disablePlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getStatusPlugin
    * @todo   Implement testgetStatusPlugin().
    */
    public function testgetStatusPlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getStatusPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::installPluginArchive
    * @todo   Implement testinstallPluginArchive().
    */
    public function testinstallPluginArchive() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'installPluginArchive', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::uninstallPlugin
    * @todo   Implement testuninstallPlugin().
    */
    public function testuninstallPlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'uninstallPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::uninstallPluginWorkspaces
    * @todo   Implement testuninstallPluginWorkspaces().
    */
    public function testuninstallPluginWorkspaces() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'uninstallPluginWorkspaces', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::installPlugin
    * @todo   Implement testinstallPlugin().
    */
    public function testinstallPlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'installPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerMenu
    * @todo   Implement testregisterMenu().
    */
    public function testregisterMenu() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerMenu', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerDashlets
    * @todo   Implement testregisterDashlets().
    */
    public function testregisterDashlets() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerDashlets', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerCss
    * @todo   Implement testregisterCss().
    */
    public function testregisterCss() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerCss', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getRegisteredCss
    * @todo   Implement testgetRegisteredCss().
    */
    public function testgetRegisteredCss() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getRegisteredCss', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerJavascript
    * @todo   Implement testregisterJavascript().
    */
    public function testregisterJavascript() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerJavascript', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getRegisteredJavascript
    * @todo   Implement testgetRegisteredJavascript().
    */
    public function testgetRegisteredJavascript() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getRegisteredJavascript', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getRegisteredJavascriptBy
    * @todo   Implement testgetRegisteredJavascriptBy().
    */
    public function testgetRegisteredJavascriptBy() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getRegisteredJavascriptBy', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::unregisterJavascripts
    * @todo   Implement testunregisterJavascripts().
    */
    public function testunregisterJavascripts() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'unregisterJavascripts', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerReport
    * @todo   Implement testregisterReport().
    */
    public function testregisterReport() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerReport', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerPmFunction
    * @todo   Implement testregisterPmFunction().
    */
    public function testregisterPmFunction() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerPmFunction', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerRedirectLogin
    * @todo   Implement testregisterRedirectLogin().
    */
    public function testregisterRedirectLogin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerRedirectLogin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerFolder
    * @todo   Implement testregisterFolder().
    */
    public function testregisterFolder() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerFolder', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerStep
    * @todo   Implement testregisterStep().
    */
    public function testregisterStep() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerStep', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::isRegisteredFolder
    * @todo   Implement testisRegisteredFolder().
    */
    public function testisRegisteredFolder() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'isRegisteredFolder', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getMenus
    * @todo   Implement testgetMenus().
    */
    public function testgetMenus() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getMenus', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getDashlets
    * @todo   Implement testgetDashlets().
    */
    public function testgetDashlets() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getDashlets', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getReports
    * @todo   Implement testgetReports().
    */
    public function testgetReports() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getReports', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getPmFunctions
    * @todo   Implement testgetPmFunctions().
    */
    public function testgetPmFunctions() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getPmFunctions', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getSteps
    * @todo   Implement testgetSteps().
    */
    public function testgetSteps() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getSteps', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getRedirectLogins
    * @todo   Implement testgetRedirectLogins().
    */
    public function testgetRedirectLogins() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getRedirectLogins', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::executeTriggers
    * @todo   Implement testexecuteTriggers().
    */
    public function testexecuteTriggers() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'executeTriggers', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::existsTrigger
    * @todo   Implement testexistsTrigger().
    */
    public function testexistsTrigger() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'existsTrigger', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getTriggerInfo
    * @todo   Implement testgetTriggerInfo().
    */
    public function testgetTriggerInfo() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getTriggerInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerTrigger
    * @todo   Implement testregisterTrigger().
    */
    public function testregisterTrigger() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerTrigger', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getPlugin
    * @todo   Implement testgetPlugin().
    */
    public function testgetPlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::setCompanyLogo
    * @todo   Implement testsetCompanyLogo().
    */
    public function testsetCompanyLogo() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'setCompanyLogo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getCompanyLogo
    * @todo   Implement testgetCompanyLogo().
    */
    public function testgetCompanyLogo() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getCompanyLogo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::setupPlugins
    * @todo   Implement testsetupPlugins().
    */
    public function testsetupPlugins() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'setupPlugins', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::executeMethod
    * @todo   Implement testexecuteMethod().
    */
    public function testexecuteMethod() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'executeMethod', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getFieldsForPageSetup
    * @todo   Implement testgetFieldsForPageSetup().
    */
    public function testgetFieldsForPageSetup() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getFieldsForPageSetup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::updateFieldsForPageSetup
    * @todo   Implement testupdateFieldsForPageSetup().
    */
    public function testupdateFieldsForPageSetup() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'updateFieldsForPageSetup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::eevalidate
    * @todo   Implement testeevalidate().
    */
    public function testeevalidate() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'eevalidate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerToolbarFile
    * @todo   Implement testregisterToolbarFile().
    */
    public function testregisterToolbarFile() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerToolbarFile', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getToolbarOptions
    * @todo   Implement testgetToolbarOptions().
    */
    public function testgetToolbarOptions() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getToolbarOptions', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerCaseSchedulerPlugin
    * @todo   Implement testregisterCaseSchedulerPlugin().
    */
    public function testregisterCaseSchedulerPlugin() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerCaseSchedulerPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getCaseSchedulerPlugins
    * @todo   Implement testgetCaseSchedulerPlugins().
    */
    public function testgetCaseSchedulerPlugins() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getCaseSchedulerPlugins', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerTaskExtendedProperty
    * @todo   Implement testregisterTaskExtendedProperty().
    */
    public function testregisterTaskExtendedProperty() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerTaskExtendedProperty', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerDashboardPage
    * @todo   Implement testregisterDashboardPage().
    */
    public function testregisterDashboardPage() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerDashboardPage', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getDashboardPages
    * @todo   Implement testgetDashboardPages().
    */
    public function testgetDashboardPages() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getDashboardPages', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getTaskExtendedProperties
    * @todo   Implement testgetTaskExtendedProperties().
    */
    public function testgetTaskExtendedProperties() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getTaskExtendedProperties', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::registerDashboard
    * @todo   Implement testregisterDashboard().
    */
    public function testregisterDashboard() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'registerDashboard', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPluginRegistry::getAttributes
    * @todo   Implement testgetAttributes().
    */
    public function testgetAttributes() 
    { 
        if (class_exists('PMPluginRegistry')) {
             $methods = get_class_methods( 'PMPluginRegistry');
            $this->assertTrue( in_array( 'getAttributes', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
