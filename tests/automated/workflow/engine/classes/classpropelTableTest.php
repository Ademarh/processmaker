<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.propelTable.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:12.
  */ 

  class classpropelTableTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers propelTable::prepareQuery
    * @todo   Implement testprepareQuery().
    */
    public function testprepareQuery() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'prepareQuery', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::setupFromXmlform
    * @todo   Implement testsetupFromXmlform().
    */
    public function testsetupFromXmlform() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'setupFromXmlform', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::count
    * @todo   Implement testcount().
    */
    public function testcount() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'count', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::renderTitle
    * @todo   Implement testrenderTitle().
    */
    public function testrenderTitle() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'renderTitle', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::renderField
    * @todo   Implement testrenderField().
    */
    public function testrenderField() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'renderField', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::defaultStyle
    * @todo   Implement testdefaultStyle().
    */
    public function testdefaultStyle() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'defaultStyle', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::renderTable
    * @todo   Implement testrenderTable().
    */
    public function testrenderTable() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'renderTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers propelTable::printForm
    * @todo   Implement testprintForm().
    */
    public function testprintForm() 
    { 
        if (class_exists('propelTable')) {
             $methods = get_class_methods( 'propelTable');
            $this->assertTrue( in_array( 'printForm', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
