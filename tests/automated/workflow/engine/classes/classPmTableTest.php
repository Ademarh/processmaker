<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.pmTable.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classPmTableTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers PmTable::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::setColumns
    * @todo   Implement testsetColumns().
    */
    public function testsetColumns() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'setColumns', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::setDataSource
    * @todo   Implement testsetDataSource().
    */
    public function testsetDataSource() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'setDataSource', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::resolveDbSource
    * @todo   Implement testresolveDbSource().
    */
    public function testresolveDbSource() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'resolveDbSource', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::getDataSource
    * @todo   Implement testgetDataSource().
    */
    public function testgetDataSource() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'getDataSource', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::getDbConfig
    * @todo   Implement testgetDbConfig().
    */
    public function testgetDbConfig() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'getDbConfig', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::setAlterTable
    * @todo   Implement testsetAlterTable().
    */
    public function testsetAlterTable() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'setAlterTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::build
    * @todo   Implement testbuild().
    */
    public function testbuild() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'build', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::buildModelFor
    * @todo   Implement testbuildModelFor().
    */
    public function testbuildModelFor() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'buildModelFor', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::prepare
    * @todo   Implement testprepare().
    */
    public function testprepare() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'prepare', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::loadSchema
    * @todo   Implement testloadSchema().
    */
    public function testloadSchema() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'loadSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::buildSchema
    * @todo   Implement testbuildSchema().
    */
    public function testbuildSchema() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'buildSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::remove
    * @todo   Implement testremove().
    */
    public function testremove() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'remove', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::removeFromSchema
    * @todo   Implement testremoveFromSchema().
    */
    public function testremoveFromSchema() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'removeFromSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::removeModelFiles
    * @todo   Implement testremoveModelFiles().
    */
    public function testremoveModelFiles() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'removeModelFiles', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::dropTable
    * @todo   Implement testdropTable().
    */
    public function testdropTable() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'dropTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::saveSchema
    * @todo   Implement testsaveSchema().
    */
    public function testsaveSchema() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'saveSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::preparePropelIniFile
    * @todo   Implement testpreparePropelIniFile().
    */
    public function testpreparePropelIniFile() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'preparePropelIniFile', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::upgradeDatabase
    * @todo   Implement testupgradeDatabase().
    */
    public function testupgradeDatabase() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'upgradeDatabase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::upgradeDatabaseFor
    * @todo   Implement testupgradeDatabaseFor().
    */
    public function testupgradeDatabaseFor() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'upgradeDatabaseFor', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::hasAutoIncrementPKey
    * @todo   Implement testhasAutoIncrementPKey().
    */
    public function testhasAutoIncrementPKey() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'hasAutoIncrementPKey', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::getPropelSupportedColumnTypes
    * @todo   Implement testgetPropelSupportedColumnTypes().
    */
    public function testgetPropelSupportedColumnTypes() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'getPropelSupportedColumnTypes', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::toCamelCase
    * @todo   Implement testtoCamelCase().
    */
    public function testtoCamelCase() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'toCamelCase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::phingbuildModel
    * @todo   Implement testphingbuildModel().
    */
    public function testphingbuildModel() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'phingbuildModel', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::phingbuildSql
    * @todo   Implement testphingbuildSql().
    */
    public function testphingbuildSql() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'phingbuildSql', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::_callPhing
    * @todo   Implement test_callPhing().
    */
    public function test_callPhing() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( '_callPhing', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PmTable::callPhing
    * @todo   Implement testcallPhing().
    */
    public function testcallPhing() 
    { 
        if (class_exists('PmTable')) {
             $methods = get_class_methods( 'PmTable');
            $this->assertTrue( in_array( 'callPhing', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
