<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.reportTables.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:17.
  */ 

  class classReportTablesTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers ReportTables::deleteAllReportVars
    * @todo   Implement testdeleteAllReportVars().
    */
    public function testdeleteAllReportVars() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'deleteAllReportVars', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::dropTable
    * @todo   Implement testdropTable().
    */
    public function testdropTable() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'dropTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::createTable
    * @todo   Implement testcreateTable().
    */
    public function testcreateTable() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'createTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::populateTable
    * @todo   Implement testpopulateTable().
    */
    public function testpopulateTable() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'populateTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::getTableVars
    * @todo   Implement testgetTableVars().
    */
    public function testgetTableVars() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'getTableVars', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::deleteReportTable
    * @todo   Implement testdeleteReportTable().
    */
    public function testdeleteReportTable() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'deleteReportTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::getSplitDate
    * @todo   Implement testgetSplitDate().
    */
    public function testgetSplitDate() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'getSplitDate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::getFormatDate
    * @todo   Implement testgetFormatDate().
    */
    public function testgetFormatDate() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'getFormatDate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::updateTables
    * @todo   Implement testupdateTables().
    */
    public function testupdateTables() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'updateTables', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::tableExist
    * @todo   Implement testtableExist().
    */
    public function testtableExist() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'tableExist', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers ReportTables::chooseDB
    * @todo   Implement testchooseDB().
    */
    public function testchooseDB() 
    { 
        if (class_exists('ReportTables')) {
             $methods = get_class_methods( 'ReportTables');
            $this->assertTrue( in_array( 'chooseDB', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
