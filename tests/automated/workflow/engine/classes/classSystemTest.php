<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.system.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:17.
  */ 

  class classSystemTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers System::getPlugins
    * @todo   Implement testgetPlugins().
    */
    public function testgetPlugins() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getPlugins', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::listWorkspaces
    * @todo   Implement testlistWorkspaces().
    */
    public function testlistWorkspaces() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'listWorkspaces', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getVersion
    * @todo   Implement testgetVersion().
    */
    public function testgetVersion() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getVersion', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getVersionFromGit
    * @todo   Implement testgetVersionFromGit().
    */
    public function testgetVersionFromGit() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getVersionFromGit', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getSysInfo
    * @todo   Implement testgetSysInfo().
    */
    public function testgetSysInfo() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getSysInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::listPoFiles
    * @todo   Implement testlistPoFiles().
    */
    public function testlistPoFiles() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'listPoFiles', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::verifyChecksum
    * @todo   Implement testverifyChecksum().
    */
    public function testverifyChecksum() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'verifyChecksum', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::verifyFileForUpgrade
    * @todo   Implement testverifyFileForUpgrade().
    */
    public function testverifyFileForUpgrade() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'verifyFileForUpgrade', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getUpgradedFilesList
    * @todo   Implement testgetUpgradedFilesList().
    */
    public function testgetUpgradedFilesList() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getUpgradedFilesList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::verifyForBootstrapUpgrade
    * @todo   Implement testverifyForBootstrapUpgrade().
    */
    public function testverifyForBootstrapUpgrade() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'verifyForBootstrapUpgrade', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::upgrade
    * @todo   Implement testupgrade().
    */
    public function testupgrade() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'upgrade', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::cleanupUpgradeDirectory
    * @todo   Implement testcleanupUpgradeDirectory().
    */
    public function testcleanupUpgradeDirectory() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'cleanupUpgradeDirectory', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::rm_dir
    * @todo   Implement testrm_dir().
    */
    public function testrm_dir() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'rm_dir', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::pm_copy
    * @todo   Implement testpm_copy().
    */
    public function testpm_copy() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'pm_copy', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getDatabaseCredentials
    * @todo   Implement testgetDatabaseCredentials().
    */
    public function testgetDatabaseCredentials() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getDatabaseCredentials', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getSystemSchema
    * @todo   Implement testgetSystemSchema().
    */
    public function testgetSystemSchema() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getSystemSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getPluginSchema
    * @todo   Implement testgetPluginSchema().
    */
    public function testgetPluginSchema() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getPluginSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getSchema
    * @todo   Implement testgetSchema().
    */
    public function testgetSchema() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::compareSchema
    * @todo   Implement testcompareSchema().
    */
    public function testcompareSchema() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'compareSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getEmailConfiguration
    * @todo   Implement testgetEmailConfiguration().
    */
    public function testgetEmailConfiguration() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getEmailConfiguration', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getSkingList
    * @todo   Implement testgetSkingList().
    */
    public function testgetSkingList() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getSkingList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getAllTimeZones
    * @todo   Implement testgetAllTimeZones().
    */
    public function testgetAllTimeZones() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getAllTimeZones', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::getSystemConfiguration
    * @todo   Implement testgetSystemConfiguration().
    */
    public function testgetSystemConfiguration() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'getSystemConfiguration', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers System::updateIndexFile
    * @todo   Implement testupdateIndexFile().
    */
    public function testupdateIndexFile() 
    { 
        if (class_exists('System')) {
             $methods = get_class_methods( 'System');
            $this->assertTrue( in_array( 'updateIndexFile', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
