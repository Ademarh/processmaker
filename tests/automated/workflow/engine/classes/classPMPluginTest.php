<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.plugin.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classPMPluginTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers PMPlugin::PMPlugin
    * @todo   Implement testPMPlugin().
    */
    public function testPMPlugin() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'PMPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerMenu
    * @todo   Implement testregisterMenu().
    */
    public function testregisterMenu() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerMenu', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerDashlets
    * @todo   Implement testregisterDashlets().
    */
    public function testregisterDashlets() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerDashlets', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerReport
    * @todo   Implement testregisterReport().
    */
    public function testregisterReport() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerReport', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerPmFunction
    * @todo   Implement testregisterPmFunction().
    */
    public function testregisterPmFunction() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerPmFunction', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::setCompanyLogo
    * @todo   Implement testsetCompanyLogo().
    */
    public function testsetCompanyLogo() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'setCompanyLogo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::redirectLogin
    * @todo   Implement testredirectLogin().
    */
    public function testredirectLogin() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'redirectLogin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerFolder
    * @todo   Implement testregisterFolder().
    */
    public function testregisterFolder() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerFolder', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerStep
    * @todo   Implement testregisterStep().
    */
    public function testregisterStep() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerStep', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerTrigger
    * @todo   Implement testregisterTrigger().
    */
    public function testregisterTrigger() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerTrigger', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::delete
    * @todo   Implement testdelete().
    */
    public function testdelete() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'delete', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::copy
    * @todo   Implement testcopy().
    */
    public function testcopy() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'copy', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::rename
    * @todo   Implement testrename().
    */
    public function testrename() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'rename', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerBreakPageTemplate
    * @todo   Implement testregisterBreakPageTemplate().
    */
    public function testregisterBreakPageTemplate() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerBreakPageTemplate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerCss
    * @todo   Implement testregisterCss().
    */
    public function testregisterCss() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerCss', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerToolbarFile
    * @todo   Implement testregisterToolbarFile().
    */
    public function testregisterToolbarFile() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerToolbarFile', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerCaseSchedulerPlugin
    * @todo   Implement testregisterCaseSchedulerPlugin().
    */
    public function testregisterCaseSchedulerPlugin() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerCaseSchedulerPlugin', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerTaskExtendedProperty
    * @todo   Implement testregisterTaskExtendedProperty().
    */
    public function testregisterTaskExtendedProperty() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerTaskExtendedProperty', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerJavascript
    * @todo   Implement testregisterJavascript().
    */
    public function testregisterJavascript() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerJavascript', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::unregisterJavascript
    * @todo   Implement testunregisterJavascript().
    */
    public function testunregisterJavascript() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'unregisterJavascript', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::registerDashboard
    * @todo   Implement testregisterDashboard().
    */
    public function testregisterDashboard() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'registerDashboard', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers PMPlugin::getExternalStepAction
    * @todo   Implement testgetExternalStepAction().
    */
    public function testgetExternalStepAction() 
    { 
        if (class_exists('PMPlugin')) {
             $methods = get_class_methods( 'PMPlugin');
            $this->assertTrue( in_array( 'getExternalStepAction', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
