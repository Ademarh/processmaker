<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.configuration.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classConfigurationsTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers Configurations::Configurations
    * @todo   Implement testConfigurations().
    */
    public function testConfigurations() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'Configurations', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::arrayClone
    * @todo   Implement testarrayClone().
    */
    public function testarrayClone() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'arrayClone', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::configObject
    * @todo   Implement testconfigObject().
    */
    public function testconfigObject() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'configObject', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::loadConfig
    * @todo   Implement testloadConfig().
    */
    public function testloadConfig() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'loadConfig', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::load
    * @todo   Implement testload().
    */
    public function testload() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'load', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::saveConfig
    * @todo   Implement testsaveConfig().
    */
    public function testsaveConfig() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'saveConfig', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::saveObject
    * @todo   Implement testsaveObject().
    */
    public function testsaveObject() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'saveObject', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::loadObject
    * @todo   Implement testloadObject().
    */
    public function testloadObject() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'loadObject', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::getConfiguration
    * @todo   Implement testgetConfiguration().
    */
    public function testgetConfiguration() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'getConfiguration', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::usersNameFormat
    * @todo   Implement testusersNameFormat().
    */
    public function testusersNameFormat() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'usersNameFormat', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::getFormats
    * @todo   Implement testgetFormats().
    */
    public function testgetFormats() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'getFormats', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::setConfig
    * @todo   Implement testsetConfig().
    */
    public function testsetConfig() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'setConfig', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::getDateFormats
    * @todo   Implement testgetDateFormats().
    */
    public function testgetDateFormats() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'getDateFormats', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::getUserNameFormats
    * @todo   Implement testgetUserNameFormats().
    */
    public function testgetUserNameFormats() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'getUserNameFormats', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::getSystemDate
    * @todo   Implement testgetSystemDate().
    */
    public function testgetSystemDate() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'getSystemDate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Configurations::getEnvSetting
    * @todo   Implement testgetEnvSetting().
    */
    public function testgetEnvSetting() 
    { 
        if (class_exists('Configurations')) {
             $methods = get_class_methods( 'Configurations');
            $this->assertTrue( in_array( 'getEnvSetting', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
