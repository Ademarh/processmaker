<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.xmlDb.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classXMLConnectionTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers XMLConnection::XMLConnection
    * @todo   Implement testXMLConnection().
    */
    public function testXMLConnection() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'XMLConnection', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::query
    * @todo   Implement testquery().
    */
    public function testquery() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'query', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::sqlLike
    * @todo   Implement testsqlLike().
    */
    public function testsqlLike() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'sqlLike', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::expandFields
    * @todo   Implement testexpandFields().
    */
    public function testexpandFields() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'expandFields', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::fetchNode
    * @todo   Implement testfetchNode().
    */
    public function testfetchNode() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'fetchNode', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::fetchChildren
    * @todo   Implement testfetchChildren().
    */
    public function testfetchChildren() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'fetchChildren', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::disconnect
    * @todo   Implement testdisconnect().
    */
    public function testdisconnect() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'disconnect', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::sqlWhereLike
    * @todo   Implement testsqlWhereLike().
    */
    public function testsqlWhereLike() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'sqlWhereLike', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::sqlString
    * @todo   Implement testsqlString().
    */
    public function testsqlString() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'sqlString', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::insertRow
    * @todo   Implement testinsertRow().
    */
    public function testinsertRow() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'insertRow', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers XMLConnection::updateRow
    * @todo   Implement testupdateRow().
    */
    public function testupdateRow() 
    { 
        if (class_exists('XMLConnection')) {
             $methods = get_class_methods( 'XMLConnection');
            $this->assertTrue( in_array( 'updateRow', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
