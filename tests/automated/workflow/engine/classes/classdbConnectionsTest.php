<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.dbConnections.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:18.
  */ 

  class classdbConnectionsTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers dbConnections::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getAllConnections
    * @todo   Implement testgetAllConnections().
    */
    public function testgetAllConnections() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getAllConnections', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getConnections
    * @todo   Implement testgetConnections().
    */
    public function testgetConnections() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getConnections', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getConnectionsProUid
    * @todo   Implement testgetConnectionsProUid().
    */
    public function testgetConnectionsProUid() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getConnectionsProUid', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::loadAdditionalConnections
    * @todo   Implement testloadAdditionalConnections().
    */
    public function testloadAdditionalConnections() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'loadAdditionalConnections', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getDbServicesAvailables
    * @todo   Implement testgetDbServicesAvailables().
    */
    public function testgetDbServicesAvailables() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getDbServicesAvailables', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::showMsg
    * @todo   Implement testshowMsg().
    */
    public function testshowMsg() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'showMsg', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getEncondeList
    * @todo   Implement testgetEncondeList().
    */
    public function testgetEncondeList() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getEncondeList', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getErrno
    * @todo   Implement testgetErrno().
    */
    public function testgetErrno() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getErrno', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getErrmsg
    * @todo   Implement testgetErrmsg().
    */
    public function testgetErrmsg() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getErrmsg', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::ordx
    * @todo   Implement testordx().
    */
    public function testordx() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'ordx', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::encryptThepassw
    * @todo   Implement testencryptThepassw().
    */
    public function testencryptThepassw() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'encryptThepassw', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers dbConnections::getPassWithoutEncrypt
    * @todo   Implement testgetPassWithoutEncrypt().
    */
    public function testgetPassWithoutEncrypt() 
    { 
        if (class_exists('dbConnections')) {
             $methods = get_class_methods( 'dbConnections');
            $this->assertTrue( in_array( 'getPassWithoutEncrypt', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
