<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/thirdparty/propel/Propel.php' ;
  require_once PATH_TRUNK . 'gulliver/thirdparty/creole/Creole.php' ;
  require_once PATH_TRUNK . 'workflow/engine/classes/class.wsTools.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:56:11.
  */ 

  class classworkspaceToolsTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers workspaceTools::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::workspaceExists
    * @todo   Implement testworkspaceExists().
    */
    public function testworkspaceExists() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'workspaceExists', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgrade
    * @todo   Implement testupgrade().
    */
    public function testupgrade() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgrade', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::getDBInfo
    * @todo   Implement testgetDBInfo().
    */
    public function testgetDBInfo() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'getDBInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::resetDBInfoCallback
    * @todo   Implement testresetDBInfoCallback().
    */
    public function testresetDBInfoCallback() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'resetDBInfoCallback', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::resetDBInfo
    * @todo   Implement testresetDBInfo().
    */
    public function testresetDBInfo() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'resetDBInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::getDBCredentials
    * @todo   Implement testgetDBCredentials().
    */
    public function testgetDBCredentials() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'getDBCredentials', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::initPropel
    * @todo   Implement testinitPropel().
    */
    public function testinitPropel() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'initPropel', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::closePropel
    * @todo   Implement testclosePropel().
    */
    public function testclosePropel() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'closePropel', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgradeTranslation
    * @todo   Implement testupgradeTranslation().
    */
    public function testupgradeTranslation() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgradeTranslation', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::getDatabase
    * @todo   Implement testgetDatabase().
    */
    public function testgetDatabase() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'getDatabase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::closeDatabase
    * @todo   Implement testcloseDatabase().
    */
    public function testcloseDatabase() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'closeDatabase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::close
    * @todo   Implement testclose().
    */
    public function testclose() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'close', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::getSchema
    * @todo   Implement testgetSchema().
    */
    public function testgetSchema() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'getSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgradeCacheView
    * @todo   Implement testupgradeCacheView().
    */
    public function testupgradeCacheView() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgradeCacheView', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgradePluginsDatabase
    * @todo   Implement testupgradePluginsDatabase().
    */
    public function testupgradePluginsDatabase() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgradePluginsDatabase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgradeDatabase
    * @todo   Implement testupgradeDatabase().
    */
    public function testupgradeDatabase() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgradeDatabase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgradeSchema
    * @todo   Implement testupgradeSchema().
    */
    public function testupgradeSchema() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgradeSchema', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::upgradeData
    * @todo   Implement testupgradeData().
    */
    public function testupgradeData() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'upgradeData', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::updateThisRegistry
    * @todo   Implement testupdateThisRegistry().
    */
    public function testupdateThisRegistry() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'updateThisRegistry', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::getMetadata
    * @todo   Implement testgetMetadata().
    */
    public function testgetMetadata() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'getMetadata', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::printSysInfo
    * @todo   Implement testprintSysInfo().
    */
    public function testprintSysInfo() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'printSysInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::printInfo
    * @todo   Implement testprintInfo().
    */
    public function testprintInfo() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'printInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::printMetadata
    * @todo   Implement testprintMetadata().
    */
    public function testprintMetadata() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'printMetadata', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::exportDatabase
    * @todo   Implement testexportDatabase().
    */
    public function testexportDatabase() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'exportDatabase', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::addToBackup
    * @todo   Implement testaddToBackup().
    */
    public function testaddToBackup() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'addToBackup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::createBackup
    * @todo   Implement testcreateBackup().
    */
    public function testcreateBackup() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'createBackup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::backup
    * @todo   Implement testbackup().
    */
    public function testbackup() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'backup', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::createDBUser
    * @todo   Implement testcreateDBUser().
    */
    public function testcreateDBUser() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'createDBUser', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::executeSQLScript
    * @todo   Implement testexecuteSQLScript().
    */
    public function testexecuteSQLScript() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'executeSQLScript', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::restoreLegacy
    * @todo   Implement testrestoreLegacy().
    */
    public function testrestoreLegacy() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'restoreLegacy', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::getBackupInfo
    * @todo   Implement testgetBackupInfo().
    */
    public function testgetBackupInfo() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'getBackupInfo', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::dirPerms
    * @todo   Implement testdirPerms().
    */
    public function testdirPerms() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'dirPerms', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers workspaceTools::restore
    * @todo   Implement testrestore().
    */
    public function testrestore() 
    { 
        if (class_exists('workspaceTools')) {
             $methods = get_class_methods( 'workspaceTools');
            $this->assertTrue( in_array( 'restore', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
