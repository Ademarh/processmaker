<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.database_base.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:55.
  */ 

  class classdatabase_baseTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers database_base::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::generateDropTableSQL
    * @todo   Implement testgenerateDropTableSQL().
    */
    public function testgenerateDropTableSQL() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'generateDropTableSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::generateCreateTableSQL
    * @todo   Implement testgenerateCreateTableSQL().
    */
    public function testgenerateCreateTableSQL() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'generateCreateTableSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::generateDropColumnSQL
    * @todo   Implement testgenerateDropColumnSQL().
    */
    public function testgenerateDropColumnSQL() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'generateDropColumnSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::generateAddColumnSQL
    * @todo   Implement testgenerateAddColumnSQL().
    */
    public function testgenerateAddColumnSQL() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'generateAddColumnSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::generateChangeColumnSQL
    * @todo   Implement testgenerateChangeColumnSQL().
    */
    public function testgenerateChangeColumnSQL() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'generateChangeColumnSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::executeQuery
    * @todo   Implement testexecuteQuery().
    */
    public function testexecuteQuery() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'executeQuery', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database_base::close
    * @todo   Implement testclose().
    */
    public function testclose() 
    { 
        if (class_exists('database_base')) {
             $methods = get_class_methods( 'database_base');
            $this->assertTrue( in_array( 'close', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
