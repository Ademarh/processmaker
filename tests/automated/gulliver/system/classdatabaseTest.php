<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.database_mysql.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:54.
  */ 

  class classdatabaseTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers database::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateCreateTableSQL
    * @todo   Implement testgenerateCreateTableSQL().
    */
    public function testgenerateCreateTableSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateCreateTableSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateDropTableSQL
    * @todo   Implement testgenerateDropTableSQL().
    */
    public function testgenerateDropTableSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateDropTableSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateDropColumnSQL
    * @todo   Implement testgenerateDropColumnSQL().
    */
    public function testgenerateDropColumnSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateDropColumnSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateAddColumnSQL
    * @todo   Implement testgenerateAddColumnSQL().
    */
    public function testgenerateAddColumnSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateAddColumnSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateChangeColumnSQL
    * @todo   Implement testgenerateChangeColumnSQL().
    */
    public function testgenerateChangeColumnSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateChangeColumnSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateGetPrimaryKeysSQL
    * @todo   Implement testgenerateGetPrimaryKeysSQL().
    */
    public function testgenerateGetPrimaryKeysSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateGetPrimaryKeysSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateDropPrimaryKeysSQL
    * @todo   Implement testgenerateDropPrimaryKeysSQL().
    */
    public function testgenerateDropPrimaryKeysSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateDropPrimaryKeysSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateAddPrimaryKeysSQL
    * @todo   Implement testgenerateAddPrimaryKeysSQL().
    */
    public function testgenerateAddPrimaryKeysSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateAddPrimaryKeysSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateDropKeySQL
    * @todo   Implement testgenerateDropKeySQL().
    */
    public function testgenerateDropKeySQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateDropKeySQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateAddKeysSQL
    * @todo   Implement testgenerateAddKeysSQL().
    */
    public function testgenerateAddKeysSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateAddKeysSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateShowTablesSQL
    * @todo   Implement testgenerateShowTablesSQL().
    */
    public function testgenerateShowTablesSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateShowTablesSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateShowTablesLikeSQL
    * @todo   Implement testgenerateShowTablesLikeSQL().
    */
    public function testgenerateShowTablesLikeSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateShowTablesLikeSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateDescTableSQL
    * @todo   Implement testgenerateDescTableSQL().
    */
    public function testgenerateDescTableSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateDescTableSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateTableIndexSQL
    * @todo   Implement testgenerateTableIndexSQL().
    */
    public function testgenerateTableIndexSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateTableIndexSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::isConnected
    * @todo   Implement testisConnected().
    */
    public function testisConnected() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'isConnected', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::logQuery
    * @todo   Implement testlogQuery().
    */
    public function testlogQuery() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'logQuery', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::executeQuery
    * @todo   Implement testexecuteQuery().
    */
    public function testexecuteQuery() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'executeQuery', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::countResults
    * @todo   Implement testcountResults().
    */
    public function testcountResults() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'countResults', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getRegistry
    * @todo   Implement testgetRegistry().
    */
    public function testgetRegistry() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getRegistry', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::close
    * @todo   Implement testclose().
    */
    public function testclose() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'close', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateInsertSQL
    * @todo   Implement testgenerateInsertSQL().
    */
    public function testgenerateInsertSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateInsertSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateUpdateSQL
    * @todo   Implement testgenerateUpdateSQL().
    */
    public function testgenerateUpdateSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateUpdateSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateDeleteSQL
    * @todo   Implement testgenerateDeleteSQL().
    */
    public function testgenerateDeleteSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateDeleteSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::generateSelectSQL
    * @todo   Implement testgenerateSelectSQL().
    */
    public function testgenerateSelectSQL() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'generateSelectSQL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::putQuotes
    * @todo   Implement testputQuotes().
    */
    public function testputQuotes() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'putQuotes', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::concatString
    * @todo   Implement testconcatString().
    */
    public function testconcatString() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'concatString', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getCaseWhen
    * @todo   Implement testgetCaseWhen().
    */
    public function testgetCaseWhen() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getCaseWhen', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::createTableObjectPermission
    * @todo   Implement testcreateTableObjectPermission().
    */
    public function testcreateTableObjectPermission() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'createTableObjectPermission', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getSelectReport4
    * @todo   Implement testgetSelectReport4().
    */
    public function testgetSelectReport4() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getSelectReport4', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getSelectReport4Filter
    * @todo   Implement testgetSelectReport4Filter().
    */
    public function testgetSelectReport4Filter() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getSelectReport4Filter', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getSelectReport5
    * @todo   Implement testgetSelectReport5().
    */
    public function testgetSelectReport5() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getSelectReport5', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getSelectReport5Filter
    * @todo   Implement testgetSelectReport5Filter().
    */
    public function testgetSelectReport5Filter() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getSelectReport5Filter', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getServerVersion
    * @todo   Implement testgetServerVersion().
    */
    public function testgetServerVersion() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getServerVersion', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getDropTable
    * @todo   Implement testgetDropTable().
    */
    public function testgetDropTable() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getDropTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getTableDescription
    * @todo   Implement testgetTableDescription().
    */
    public function testgetTableDescription() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getTableDescription', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getFieldNull
    * @todo   Implement testgetFieldNull().
    */
    public function testgetFieldNull() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getFieldNull', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getValidate
    * @todo   Implement testgetValidate().
    */
    public function testgetValidate() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getValidate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::reportTableExist
    * @todo   Implement testreportTableExist().
    */
    public function testreportTableExist() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'reportTableExist', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::getLimitRenderTable
    * @todo   Implement testgetLimitRenderTable().
    */
    public function testgetLimitRenderTable() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'getLimitRenderTable', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers database::tableExists
    * @todo   Implement testtableExists().
    */
    public function testtableExists() 
    { 
        if (class_exists('database')) {
             $methods = get_class_methods( 'database');
            $this->assertTrue( in_array( 'tableExists', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
