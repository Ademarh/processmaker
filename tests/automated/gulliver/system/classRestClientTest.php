<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.restClient.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:55.
  */ 

  class classRestClientTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers RestClient::__construct
    * @todo   Implement test__construct().
    */
    public function test__construct() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( '__construct', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::execute
    * @todo   Implement testexecute().
    */
    public function testexecute() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'execute', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::treatURL
    * @todo   Implement testtreatURL().
    */
    public function testtreatURL() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'treatURL', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::treatResponse
    * @todo   Implement testtreatResponse().
    */
    public function testtreatResponse() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'treatResponse', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::getHeaders
    * @todo   Implement testgetHeaders().
    */
    public function testgetHeaders() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'getHeaders', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::getResponse
    * @todo   Implement testgetResponse().
    */
    public function testgetResponse() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'getResponse', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::getResponseCode
    * @todo   Implement testgetResponseCode().
    */
    public function testgetResponseCode() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'getResponseCode', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::getResponseMessage
    * @todo   Implement testgetResponseMessage().
    */
    public function testgetResponseMessage() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'getResponseMessage', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::getResponseContentType
    * @todo   Implement testgetResponseContentType().
    */
    public function testgetResponseContentType() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'getResponseContentType', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::setNoFollow
    * @todo   Implement testsetNoFollow().
    */
    public function testsetNoFollow() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'setNoFollow', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::close
    * @todo   Implement testclose().
    */
    public function testclose() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'close', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::setUrl
    * @todo   Implement testsetUrl().
    */
    public function testsetUrl() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'setUrl', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::setContentType
    * @todo   Implement testsetContentType().
    */
    public function testsetContentType() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'setContentType', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::setCredentials
    * @todo   Implement testsetCredentials().
    */
    public function testsetCredentials() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'setCredentials', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::setMethod
    * @todo   Implement testsetMethod().
    */
    public function testsetMethod() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'setMethod', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::setParameters
    * @todo   Implement testsetParameters().
    */
    public function testsetParameters() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'setParameters', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::createClient
    * @todo   Implement testcreateClient().
    */
    public function testcreateClient() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'createClient', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::post
    * @todo   Implement testpost().
    */
    public function testpost() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'post', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::put
    * @todo   Implement testput().
    */
    public function testput() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'put', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::get
    * @todo   Implement testget().
    */
    public function testget() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'get', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::delete
    * @todo   Implement testdelete().
    */
    public function testdelete() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'delete', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers RestClient::call
    * @todo   Implement testcall().
    */
    public function testcall() 
    { 
        if (class_exists('RestClient')) {
             $methods = get_class_methods( 'RestClient');
            $this->assertTrue( in_array( 'call', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
