<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.form.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:55.
  */ 

  class classFormTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers Form::setDefaultValues
    * @todo   Implement testsetDefaultValues().
    */
    public function testsetDefaultValues() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'setDefaultValues', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::Form
    * @todo   Implement testForm().
    */
    public function testForm() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'Form', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::printTemplate
    * @todo   Implement testprintTemplate().
    */
    public function testprintTemplate() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'printTemplate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::render
    * @todo   Implement testrender().
    */
    public function testrender() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'render', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::setValues
    * @todo   Implement testsetValues().
    */
    public function testsetValues() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'setValues', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::getFields
    * @todo   Implement testgetFields().
    */
    public function testgetFields() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'getFields', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::validatePost
    * @todo   Implement testvalidatePost().
    */
    public function testvalidatePost() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'validatePost', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::validateArray
    * @todo   Implement testvalidateArray().
    */
    public function testvalidateArray() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'validateArray', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::getVars
    * @todo   Implement testgetVars().
    */
    public function testgetVars() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'getVars', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::validateRequiredFields
    * @todo   Implement testvalidateRequiredFields().
    */
    public function testvalidateRequiredFields() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'validateRequiredFields', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers Form::validateFields
    * @todo   Implement testvalidateFields().
    */
    public function testvalidateFields() 
    { 
        if (class_exists('Form')) {
             $methods = get_class_methods( 'Form');
            $this->assertTrue( in_array( 'validateFields', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
