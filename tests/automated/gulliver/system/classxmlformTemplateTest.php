<?php 
  require_once PATH_TRUNK . 'gulliver/thirdparty/smarty/libs/Smarty.class.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlDocument.php'; 
  require_once PATH_TRUNK . 'gulliver/system/class.xmlform.php'; 

  /** 
   * Generated by ProcessMaker Test Unit Generator on 2012-05-10 at 20:39:57.
  */ 

  class classxmlformTemplateTest extends PHPUnit_Framework_TestCase 
  { 
    /**
    * @covers xmlformTemplate::xmlformTemplate
    * @todo   Implement testxmlformTemplate().
    */
    public function testxmlformTemplate() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( 'xmlformTemplate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::printTemplate
    * @todo   Implement testprintTemplate().
    */
    public function testprintTemplate() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( 'printTemplate', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::printJavaScript
    * @todo   Implement testprintJavaScript().
    */
    public function testprintJavaScript() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( 'printJavaScript', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::printJSFile
    * @todo   Implement testprintJSFile().
    */
    public function testprintJSFile() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( 'printJSFile', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::getFields
    * @todo   Implement testgetFields().
    */
    public function testgetFields() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( 'getFields', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::printObject
    * @todo   Implement testprintObject().
    */
    public function testprintObject() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( 'printObject', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::_get_template
    * @todo   Implement test_get_template().
    */
    public function test_get_template() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( '_get_template', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::_get_timestamp
    * @todo   Implement test_get_timestamp().
    */
    public function test_get_timestamp() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( '_get_timestamp', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::_get_secure
    * @todo   Implement test_get_secure().
    */
    public function test_get_secure() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( '_get_secure', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

    /**
    * @covers xmlformTemplate::_get_trusted
    * @todo   Implement test_get_trusted().
    */
    public function test_get_trusted() 
    { 
        if (class_exists('xmlformTemplate')) {
             $methods = get_class_methods( 'xmlformTemplate');
            $this->assertTrue( in_array( '_get_trusted', $methods ), 'seems like this function is outside this class' ); 
        } 
    } 

  } 
